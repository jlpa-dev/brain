{
    "componentChunkName": "component---src-templates-cheatsheet-js",
    "path": "/cheatsheets/docker/",
    "result": {"data":{"site":{"siteMetadata":{"title":"JLPA | BLOG"}},"markdownRemark":{"id":"403e8dfb-df4a-5842-93b4-79960c105a00","excerpt":"Instalación Linux (Edge): curl -sSL https://get.docker.com/ | sh Instalación Docker Machine https://docs.docker.com/machine/install-machine/ Instalación Docker…","html":"<p>Instalación</p>\n<p>Linux (Edge): curl -sSL <a href=\"https://get.docker.com/\">https://get.docker.com/</a> | sh</p>\n<p>Instalación Docker Machine</p>\n<p><a href=\"https://docs.docker.com/machine/install-machine/\">https://docs.docker.com/machine/install-machine/</a></p>\n<p>Instalación Docker Compose</p>\n<p><a href=\"https://docs.docker.com/compose/install/\">https://docs.docker.com/compose/install/</a></p>\n<p>Comandos</p>\n<p>docker info</p>\n<p>docker version</p>\n<h1>Creating and Using Containers Like a Boss</h1>\n<h2>Check Our Docker Install and Config</h2>\n<p>Ver versión de docker</p>\n<p>docker version</p>\n<p>Información de la instalación</p>\n<p>docker info</p>\n<p>docker</p>\n<p>Ayuda de un subcomando (subcomando container)</p>\n<p>docker container --help</p>\n<p>Listar contenedores activos</p>\n<p>docker container ls</p>\n<p>Listar todos los contenedores</p>\n<p>docker container ls -a</p>\n<p>Iniciar un contenedor nginx</p>\n<p>docker container run --publish  nginx 80:80</p>\n<p>Iniciar un contenedor nginx desacoplado</p>\n<p>docker container run --publish  nginx --detach 80:80</p>\n<p>Iniciar un contenedor nginx con nombre webhost</p>\n<p>docker container run --publish 80:80 --detach --name webhost nginx</p>\n<p>Ver los procesos en docker</p>\n<p>docker ps</p>\n<p>Ver los procesos dentro de un contenedor</p>\n<p>docker container top webhost</p>\n<p>Ver los logs de una instancia desacoplada</p>\n<p>docker container logs webhost</p>\n<p>Detener una instancia</p>\n<p>docker stop <ID> o &#x3C;3 primeros caracteres de ID></p>\n<p>Detener varias instancias</p>\n<p>docker stop <ID> <ID> <ID></p>\n<p>Eliminar varios contenedores</p>\n<p>docker container rm <ID> <ID> <ID></p>\n<p>Forzar el eliminado</p>\n<p>docker container rm -f <ID></p>\n<p>Listar ayuda de comandos para stats</p>\n<p>docker container stats --help</p>\n<p>Ver detalle de consumo de recursos de los contenedores</p>\n<p>docker container stats</p>\n<p>Ver la configuración inicial de un contenedor</p>\n<p>docker container inspec <id> | <name></p>\n<p>Abrir una terminal interactiva después de crear contenedor</p>\n<p>docker container run -it nginx nginx bash</p>\n<p>Iniciar un contenedor y abrir una terminal interactiva</p>\n<p>docker container start -ia ubuntu</p>\n<p>Procesos en docker en la máquina HOST (Linux Only)</p>\n<p>docker ps</p>\n<p>Iniciar instancia de mongo detached</p>\n<p>docker run --name mongo -d mongo</p>\n<p>Listas los procesos corriendo dentro de un contenedor específico</p>\n<p>docker top mongo</p>\n<p>Retorna logs de inicio del contenedor</p>\n<p>docker container inspect mysql</p>\n<p>Ver detalle de consumo de recursos de los contenedores</p>\n<p>docker container stats</p>\n<p>Más comandos posibles para stats</p>\n<p>docker container stats --help</p>\n<p>Abrir una shell dentro del contenedor</p>\n<p>docker container run -it nginx</p>\n<p>Iniciar un contenedor y abrir una shell</p>\n<p>docker container start -ai <nombre-contenedor> [bash]</p>\n<p>Abrir una shell en un contenedor iniciado</p>\n<p>docker container exec -it <nombre-contendor> &#x3C;programa{ejm:bash}></p>\n<p>Ver la ip de un contenedor</p>\n<p>docker container inspect --format ‘{{ .NetworkSettings.IPAddress }}’ <nombre-contenedor></p>\n<h2>Container VS. VM: It's Just a Process</h2>\n<p>Detener un contenedor</p>\n<p>docker stop mongo</p>\n<p>Mostrar procesos de un contenedor</p>\n<p>docker top mongo</p>\n<p>Iniciar un contenedor</p>\n<p>docker start mongo</p>\n<h2>What's Going On In Containers: CLI Process Monitoring</h2>\n<p>docker container run -d --name nginx nginx</p>\n<p>docker container run -d --name mysql -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql</p>\n<p>docker container ls</p>\n<p>docker container top mysql</p>\n<p>docker container top nginx</p>\n<h2>Getting a Shell Inside Containers: No Need for SSH</h2>\n<p>docker container run -help</p>\n<p>docker container run -it --name proxy nginx bash</p>\n<p>docker container ls</p>\n<p>docker container ls -a</p>\n<p>docker container run -it --name ubuntu ubuntu</p>\n<p>docker container ls</p>\n<p>docker container ls -a</p>\n<p>docker container start --help</p>\n<p>docker container start -ai ubuntu</p>\n<p>docker container exec --help</p>\n<p>docker container exec -it mysql bash</p>\n<p>docker container ls</p>\n<p>docker pull alpine</p>\n<p>docker image ls</p>\n<p>docker container run -it alpine bash</p>\n<p>docker container run -it alpine sh</p>\n<h2>Docker Networks: Concepts for Private and Public Comms in Containers</h2>\n<p>docker container run -p 80:80 --name webhost -d nginx</p>\n<p>docker container port webhost</p>\n<p>docker container inspect --format '{{ .NetworkSettings.IPAddress }}' webhost</p>\n<h2>Docker Networks: CLI Management of Virtual Networks</h2>\n<p>Listas las interfaces de red</p>\n<p>docker network ls</p>\n<p>Ver detalles de la red bridge (Defualt net NET)</p>\n<p>docker network inspect bridge</p>\n<p>Crea una interfaz de red virtual</p>\n<p>docker network create my_app_net</p>\n<p>Muestra opciones para la creación de un red</p>\n<p>docker network create --help</p>\n<p>Podemos especificar la opcion nework cuando creamos un contenedor</p>\n<p>docker container run -d --name new_nginx --network my_app_net nginx</p>\n<p>Ahora podemos observar el contenedor perteneciente a esta red</p>\n<p>docker network inspect my_app_net</p>\n<p>POdemos conectar un contenedor a una red</p>\n<p>docker network connect</p>\n<p>Podemos ver que el contenedor está en 2 networks</p>\n<p>docker container inspect TAB COMPLETION</p>\n<p>Podemos desconectar un contendor de una red</p>\n<p>docker container disconnect TAB COMPLETION</p>\n<h2>Docker Networks: DNS and How Containers Find Each Other</h2>\n<p>docker network inspect TAB COMPLETION</p>\n<p>docker container run -d --name my_nginx --network my_app_net nginx</p>\n<p>docker container inspect TAB COMPLETION</p>\n<p>docker container exec -it my_nginx ping new_nginx</p>\n<p>docker container exec -it new_nginx ping my_nginx</p>\n<p>docker network ls</p>\n<p>docker container create --help</p>\n<h2>Assignment Answers: Using Containers for CLI Testing</h2>\n<p>docker container run --rm -it centos:7 bash</p>\n<p>docker ps -a</p>\n<p>docker container run --rm -it ubuntu:14.04 bash</p>\n<p>docker ps -a</p>\n<h2>Assignment Answers: DNS Round Robin Testing</h2>\n<p>docker network create dude</p>\n<p>docker container run -d --net dude --net-alias search elasticsearch:2</p>\n<p>docker container ls</p>\n<p>docker container run --rm -- net dude alpine nslookup search</p>\n<p>docker container run --rm --net dude centos curl -s search:9200</p>\n<p>docker container ls</p>\n<p>docker container rm -f TAB COMPLETION</p>\n<p>Kubernetes</p>\n<p>from local docker image</p>\n<p>kubectl run discovery –image=myproject/myimage –image-pull-policy=Never –port=8761</p>\n<p>kubeadm reset</p>\n<p>kubeadm init</p>\n<p>Centos 7 Kubernetes Kluster</p>\n<p><a href=\"https://www.centlinux.com/2019/04/install-kubernetes-cluster-docker-ce-centos-7.html\">https://www.centlinux.com/2019/04/install-kubernetes-cluster-docker-ce-centos-7.html</a></p>\n<p>Observación el cgroup de docker debe ser “native.cgroupdriver=cgroupfs”</p>","frontmatter":{"title":"Docker","date":null,"frontimage":null,"description":null},"fields":{"slug":"/docker/"}},"previous":{"fields":{"slug":"/ansible/"},"frontmatter":{"title":"Ansible"}},"next":{"fields":{"slug":"/flex/"},"frontmatter":{"title":"CSS Flexbox"}}},"pageContext":{"id":"403e8dfb-df4a-5842-93b4-79960c105a00","previousPostId":"d9f65ee7-e844-5efa-969d-ea5e625263a3","nextPostId":"2e5337fe-dc1e-5e86-9dcf-20fbd1769ebd"}},
    "staticQueryHashes": ["2841359383","3865664119"]}